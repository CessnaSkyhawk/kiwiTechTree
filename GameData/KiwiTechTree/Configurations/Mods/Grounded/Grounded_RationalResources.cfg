// Kiwi's Tech Tree Overhaul (Grounded by blackheart612 RationalResourcesPatch)
// Version 0.7
// Created: 30 September for KSP 1.9.1
// Adds Rational Resources Support to Groudned Parts

@PART[groundedisru]:NEEDS[Grounded,RationalResources]
{
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Lf+Ox]]:NEEDS[Kerbalism,ProfileDefault]
	{
		@ConverterName = Oxidizer (Kerbalism) // using moles
		@StartActionName = Start ISRU [Oxidizer (Kerbalism)]
		@StopActionName = Stop ISRU [Oxidizer (Kerbalism)]
		@ToggleActionName = Toggle ISRU [Oxidizer (Kerbalism)]
		Tag = RR
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 0.2561 // 9
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdOxygen
			Ratio = 0.2524 // 9
			FlowMode = STAGE_PRIORITY_FLOW
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@Ratio = 0.0612 // 9.5625
		}
		!OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]] {}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Lf+Ox]]
	{
		@ConverterName = Kerolox B // using moles
		@StartActionName = Start ISRU [Kerolox B]
		@StopActionName = Stop ISRU [Kerolox B]
		@ToggleActionName = Toggle ISRU [Kerolox B]
		Tag = RR
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 0.3699 // 13
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdCO2
			Ratio = 0.4501 // 12
			FlowMode = STAGE_PRIORITY_FLOW
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@Ratio = 0.0341 // 1
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@Ratio = 0.0768 // 12
			@DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Lf+Ox]]
	{
		@ConverterName = Kerosene // using kilos
		@StartActionName = Start ISRU [Kerosene]
		@StopActionName = Stop ISRU [Kerosene]
		@ToggleActionName = Toggle ISRU [Kerosene]
		Tag = RR
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 1.85
		}
		INPUT_RESOURCE
		{
			ResourceName = Carbon
			Ratio = 0.345
			FlowMode = STAGE_PRIORITY_FLOW
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@Ratio = 0.3712
		}
		!OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]] {}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Lf+Ox]]
	{
		@ConverterName = Hydrolox // using kilos
		@StartActionName = Start ISRU [Hydrolox]
		@StopActionName = Stop ISRU [Hydrolox]
		@ToggleActionName = Toggle ISRU [Hydrolox]
		Tag = RR
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = Water
			@Ratio = 3.6
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 0.888
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@Ratio = 0.0592
			@DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Lf+Ox]]
	{
		@ConverterName = Methalox // using kilos
		@StartActionName = Start ISRU [Methalox]
		@StopActionName = Stop ISRU [Methalox]
		@ToggleActionName = Toggle ISRU [Methalox]
		Tag = RR
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 3.765
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdCO2
			Ratio = 2.51
			FlowMode = STAGE_PRIORITY_FLOW
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = LqdMethane
			@Ratio = 3.772
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@Ratio = 0.32
			@DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Lf+Ox]]
	{
		@ConverterName = LqdAmmonia // using moles
		@StartActionName = Start ISRU [LqdAmmonia]
		@StopActionName = Stop ISRU [LqdAmmonia]
		@ToggleActionName = Toggle ISRU [LqdAmmonia]
		Tag = RR
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 0.8536 // 30
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdNitrogen
			Ratio = 0.3396 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = LqdAmmonia
			@Ratio = 0.4851 // 20
		}
		!OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]] {}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Lf+Ox]]
	{
		@ConverterName = MonoPropellant // using moles
		@StartActionName = Start ISRU [MonoPropellant A]
		@StopActionName = Stop ISRU [MonoPropellant A]
		@ToggleActionName = Toggle ISRU [MonoPropellant A]
		Tag = RR
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 0.5691 // 20
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdNitrogen
			Ratio = 0.3396 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = MonoPropellant
			@Ratio = 0.0427 // 10
		}
		!OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]] {}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Lf+Ox]]
	{
		@ConverterName = MonoPropellant + Hydrogen // using moles
		@StartActionName = Start ISRU [MonoPropellant B]
		@StopActionName = Stop ISRU [MonoPropellant B]
		@ToggleActionName = Toggle ISRU [MonoPropellant B]
		Tag = RR
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = LqdAmmonia
			@Ratio = 0.4851 // 20
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = MonoPropellant
			@Ratio = 0.0427 // 10
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 0.2845 // 10
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Lf+Ox]]
	{
		@ConverterName = Carbon Extractor // using moles
		@StartActionName = Start ISRU [Carbon Extractor]
		@StopActionName = Stop ISRU [Carbon Extractor]
		@ToggleActionName = Toggle ISRU [Carbon Extractor]
		Tag = RR
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]] // 1:1
		{
			@Ratio = 0.0601 // 2.8985
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = Carbon
			@Ratio = 0.1201 // 50
		}
		!OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]] {}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Lf+Ox]]
	{
		@ConverterName = CO2 Fuser // using moles
		@StartActionName = Start ISRU [CO2 Fuser]
		@StopActionName = Stop ISRU [CO2 Fuser]
		@ToggleActionName = Toggle ISRU [CO2 Fuser]
		Tag = RR
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = Carbon
			@Ratio = 0.024 // 10
		}
		INPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = 22.69504 // 10
			FlowMode = STAGE_PRIORITY_FLOW
			%DumpExcess = True
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = CarbonDioxide
			@Ratio = 22.5818 // 10
		}
		!OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]] {}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Lf+Ox]]
	{
		@ConverterName = CO2 Splitter // using moles
		@StartActionName = Start ISRU [CO2 Splitter]
		@StopActionName = Stop ISRU [CO2 Splitter]
		@ToggleActionName = Toggle ISRU [CO2 Splitter]
		Tag = RR
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = CarbonDioxide
			@Ratio = 22.5818 // 10
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = Oxygen
			@Ratio = 22.69504 // 10
		}
		
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@ResourceName = Carbon
			@Ratio = 0.024 // 10
			@DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Lf+Ox]]
	{
		@ConverterName = Hydrates Splitter // using moles
		@StartActionName = Start ISRU [Hydrates Splitter]
		@StopActionName = Stop ISRU [Hydrates Splitter]
		@ToggleActionName = Toggle ISRU [Hydrates Splitter]
		Tag = RR
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = Hydrates
			@Ratio = 0.3014 // 2.6803
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = Water
			@Ratio = 0.1802 // 1
			%DumpExcess = True
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@ResourceName = XenonGas
			@Ratio = 0.0144 // 0.011; nerfed for gameplay balance
			%DumpExcess = True
		}
		+OUTPUT_RESOURCE:HAS[#ConverterName[Lf+Ox]]:NEEDS[NearFuturePropulsion]
		{
			@ResourceName = ArgonGas
			@Ratio = 0.8957 // 0.02; nerfed to 1/100 for gameplay balance
		}
		+OUTPUT_RESOURCE:HAS[#ConverterName[Lf+Ox]]
		{
			@ResourceName = MetalOre
			@Ratio = 0.0129 // 3
		}
		+OUTPUT_RESOURCE:HAS[#ConverterName[Lf+Ox]]
		{
			@ResourceName = Oxygen
			@Ratio = 68.0851 // 3
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Lf+Ox]]
	{
		@ConverterName = Water Splitter // using kilos
		@StartActionName = Start ISRU [Water Splitter]
		@StopActionName = Stop ISRU [Water Splitter]
		@ToggleActionName = Toggle ISRU [Water Splitter]
		Tag = RR
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = Water
			@Ratio = 1.8
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = Hydrogen
			@Ratio = 224.25
			%DumpExcess = True
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@ResourceName = Oxygen
			@Ratio = 113.48
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Lf+Ox]]
	{
		@ConverterName = Alumina Splitter // using moles
		@StartActionName = Start ISRU [Alumina Splitter]
		@StopActionName = Stop ISRU [Alumina Splitter]
		@ToggleActionName = Toggle ISRU [Alumina Splitter]
		Tag = RR
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = Alumina
			@Ratio = 0.2562 // 10
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = Metal
			@Ratio = 0.1002 // 7
			%DumpExcess = True
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@ResourceName = Oxygen
			@Ratio = 113.4752 // 5
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Lf+Ox]]
	{
		@ConverterName = Monazite Splitter // using moles
		@StartActionName = Start ISRU [Monazite Splitter]
		@StopActionName = Stop ISRU [Monazite Splitter]
		@ToggleActionName = Toggle ISRU [Monazite Splitter]
		Tag = RR
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = Monazite
			@Ratio = 0.0468 // 1
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = RareMetals
			@Ratio = 0.025 // 1
			%DumpExcess = True
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@ResourceName = Phosphorus
			@Ratio = 0.0062 // 1
		}
		+OUTPUT_RESOURCE:HAS[#ConverterName[Lf+Ox]]
		{
			@ResourceName = Oxygen
			@Ratio = 22.695 // 1
		}
	}
	@MODULE[ModuleResourceConverter]:HAS[#ConverterName[Lf+Ox]]:NEEDS[Kerbalism,ProfileDefault]
	{
		@ConverterName = LiquidFuel (Kerbalism) // using moles
		@StartActionName = Start ISRU [LiquidFuel (Kerbalism)]
		@StopActionName = Stop ISRU [LiquidFuel (Kerbalism)]
		@ToggleActionName = Toggle ISRU [LiquidFuel (Kerbalism)]
		Tag = RR
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = LqdMethane
			@Ratio = 0.7184 // 19.048
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@Ratio = 0.0612 // 1.795
		}
		!OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]] {}
	}
}


// Grounded
@PART[groundeddrill]:NEEDS[Grounded,RationalResources,!Kerbalism]
{
	+MODULE[ModuleResourceHarvester],0
	{
		@ResourceName = Alumina
		@ConverterName = Alumina Harvester
		@StartActionName = Start Alumina Harvester
		@StopActionName = Stop Alumina Harvester
		@ToggleActionName = Toggle Alumina Harvester
		@Efficiency *= 5
		@INPUT_RESOURCE
		{
			@Ratio /= 5
		}
	}
	+MODULE[ModuleResourceHarvester],0
	{
		@ResourceName = Ammonia
		@ConverterName = Ammonia Harvester
		@StartActionName = Start Ammonia Harvester
		@StopActionName = Stop Ammonia Harvester
		@ToggleActionName = Toggle Ammonia Harvester
	}
	+MODULE[ModuleResourceHarvester],0
	{
		@ResourceName = CarbonDioxide
		@ConverterName = CarbonDioxide Harvester
		@StartActionName = Start CarbonDioxide Harvester
		@StopActionName = Stop CarbonDioxide Harvester
		@ToggleActionName = Toggle CarbonDioxide Harvester
	}
	+MODULE[ModuleResourceHarvester],0
	{
		@ResourceName = Hydrates
		@ConverterName = Hydrates Harvester
		@StartActionName = Start Hydrates Harvester
		@StopActionName = Stop Hydrates Harvester
		@ToggleActionName = Toggle Hydrates Harvester
	}
	+MODULE[ModuleResourceHarvester],0
	{
		@ResourceName = MetalOre
		@ConverterName = MetalOre Harvester
		@StartActionName = Start MetalOre Harvester
		@StopActionName = Stop MetalOre Harvester
		@ToggleActionName = Toggle MetalOre Harvester
	}
	+MODULE[ModuleResourceHarvester],0
	{
		@ResourceName = Methane
		@ConverterName = Methane Harvester
		@StartActionName = Start Methane Harvester
		@StopActionName = Stop Methane Harvester
		@ToggleActionName = Toggle Methane Harvester
	}
	+MODULE[ModuleResourceHarvester],0
	{
		@ResourceName = Monazite
		@ConverterName = Monazite Harvester
		@StartActionName = Start Monazite Harvester
		@StopActionName = Stop Monazite Harvester
		@ToggleActionName = Toggle Monazite Harvester
		@Efficiency *= 5
		@INPUT_RESOURCE
		{
			@Ratio /= 5
		}
	}
	+MODULE[ModuleResourceHarvester],0
	{
		@ResourceName = Nitrogen
		@ConverterName = Nitrogen Harvester
		@StartActionName = Start Nitrogen Harvester
		@StopActionName = Stop Nitrogen Harvester
		@ToggleActionName = Toggle Nitrogen Harvester
	}
	+MODULE[ModuleResourceHarvester],0
	{
		@ResourceName = Oxygen
		@ConverterName = Oxygen Harvester
		@StartActionName = Start Oxygen Harvester
		@StopActionName = Stop Oxygen Harvester
		@ToggleActionName = Toggle Oxygen Harvester
	}
	+MODULE[ModuleResourceHarvester],0
	{
		@ResourceName = Water
		@ConverterName = Water Harvester
		@StartActionName = Start Water Harvester
		@StopActionName = Stop Water Harvester
		@ToggleActionName = Toggle Water Harvester
	}
}

@PART[container]:NEEDS[B9PartSwitch,CommunityResourcePack,Grounded,!ConfigurableContainers/Parts]
{
	refVolume = #$RESOURCE[Ore]/maxAmount$
	@refVolume *= 5
	!RESOURCE[Ore] {}
	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = RRSwitch
		switcherDescription = RR Input
		switchInFlight = True
		baseVolume = #$../refVolume$
		SUBTYPE
		{
			name = Ore
			tankType = RR_Ore
			title = Ore
		}
		SUBTYPE
		{
			name = Alumina
			tankType = RR_Alumina
			title = Alumina
			primaryColor = Grey
			secondaryColor = Grey
		}
		SUBTYPE
		{
			name = Monazite
			tankType = RR_Monazite
			title = Monazite
			primaryColor = BrownishOrange
			secondaryColor = BrownishOrange
		}
		SUBTYPE
		{
			name = Phosphorus
			tankType = RR_Phosphorus
			title = Phosphorus
			primaryColor = Beige
			secondaryColor = Beige
		}
		SUBTYPE
		{
			name = MetalOre
			tankType = RR_MetalOre
			title = MetalOre
			primaryColor = BrownishGrey
			secondaryColor = BrownishGrey
		}
		SUBTYPE:NEEDS[SimpleConstruction]
		{
			name = Metal
			tankType = RR_Metal
			title = Metal
			primaryColor = Gunmetal
			secondaryColor = Gunmetal
		}
		SUBTYPE:NEEDS[SimpleConstruction]
		{
			name = RocketParts
			tankType = RR_RocketParts
			title = RocketParts
			primaryColor = PumpkinOrange
			secondaryColor = PumpkinOrange
		}
		SUBTYPE
		{
			name = Ammonia
			tankType = RR_Ammonia
			title = Ammonia
			primaryColor = BurntRed
			secondaryColor = BurntRed
		}
		SUBTYPE
		{
			name = Carbon
			tankType = RR_Carbon
			title = Carbon
			primaryColor = Dark
			secondaryColor = Dark
		}
		SUBTYPE
		{
			name = CarbonDioxide
			tankType = RR_CarbonDioxide
			title = CarbonDioxide
			primaryColor = Greyish
			secondaryColor = Greyish
		}
		SUBTYPE
		{
			name = Hydrates
			tankType = RR_Hydrates
			title = Hydrates
			primaryColor = FadedBlue
			secondaryColor = FadedBlue
		}
		SUBTYPE
		{
			name = Hydrogen
			tankType = RR_Hydrogen
			title = Hydrogen
			primaryColor = CarolinaBlue
			secondaryColor = CarolinaBlue
		}
		SUBTYPE
		{
			name = Methane
			tankType = RR_Methane
			title = Methane
			primaryColor = FadedGreen
			secondaryColor = FadedGreen
		}
		SUBTYPE
		{
			name = Nitrogen
			tankType = RR_Nitrogen
			title = Nitrogen
			primaryColor = Azure
			secondaryColor = Azure
		}
		SUBTYPE
		{
			name = Oxygen
			tankType = RR_Oxygen
			title = Oxygen
			primaryColor = BabyBlue
			secondaryColor = BabyBlue
		}
		SUBTYPE
		{
			name = Rock
			tankType = RR_Rock
			title = Rock
			primaryColor = Desert
			secondaryColor = Desert
		}
		SUBTYPE
		{
			name = Water
			tankType = RR_Water
			title = Water
			primaryColor = Ocean
			secondaryColor = Ocean
		}
		SUBTYPE
		{
			name = RareMetals
			tankType = RR_RareMetals
			title = RareMetals
			primaryColor = DarkGreyBlue
			secondaryColor = DarkGreenBlue
		}
	}
}