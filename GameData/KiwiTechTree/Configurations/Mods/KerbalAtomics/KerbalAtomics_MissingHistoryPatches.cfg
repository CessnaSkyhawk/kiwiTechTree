// Kiwi's Tech Tree Overhaul (Kerbal Atomics 1.1.4 by Nertea Patch)
// Version 1.1
// Created: August 2020 for KSP 1.9.1
// Last Updated: 22 November 2020
// 5 November 2020: Added upgrade support.
// 22 November 2020: Added support for NTRsUseLF extras in Kerbal Atomics

// MM Configs for modifying the LV-N to be a hybrid LF/LH2 engine

// LV-N (stock)
// Common patch elements - balance only
@PART[nuclearEngine_1p5]:NEEDS[MissingHistory,KerbalAtomics,!NTRsUseLF]:AFTER[zKerbalAtomics]
{
  @mass = 5.5

  MODULE
  {
    name = MultiModeEngine
    primaryEngineID = LF
    secondaryEngineID = LH2
    primaryEngineModeDisplayName = #LOC_KerbalAtomics_Multimode_LF
    secondaryEngineModeDisplayName = #LOC_KerbalAtomics_Multimode_LH2
  }

  @MODULE[ModuleAlternator]
  {
    preferMultiMode = true
  }

  // The LH2NTRsDynamic patch should have changed this engine to burn LH2
  // already, but apply some part-specific tweaks.
  @MODULE[ModuleEngines*]
  {
    @name = ModuleEnginesFX
    @engineID = LH2

    // Redundant since LH2NTRsDynamic does this already, but do it
    // again as a fail-safe in case that patch is removed.
    @PROPELLANT[LiquidFuel]
    {
      @name = LqdHydrogen
      @ratio = 1.0
    }

    // Part-specific Isp values, overriding the generic adjustment
    // done by LH2NTRsDynamic.
    !atmosphereCurve {}
    atmosphereCurve
    {
      key = 0 912
      key = 1 500
      key = 2 50
      key = 10 1
    }
  }

  // Copy the LH2 engine module to make an LF-burning alternative mode.
  $MODULE[ModuleEnginesFX]:HAS[#engineID[LH2]]
  {
    @engineID = LF
    @PROPELLANT[LqdHydrogen]
    {
      @name = LiquidFuel
      @ratio = 0.9
    }

    !atmosphereCurve {}
    atmosphereCurve
    {
      key = 0 610
      key = 1 195
      key = 2 0.001
    }
  }
}

// LV-N (stock)
// Applies FX changes, but without restock model
@PART[nuclearEngine_1p5]:NEEDS[MissingHistory,KerbalAtomics,!NTRsUseLF]:AFTER[zKerbalAtomics]
{
	!EFFECTS {}
  EFFECTS
  {
    engage
    {
      AUDIO
      {
        channel = Ship
        clip = sound_vent_medium
        volume = 1.0
        pitch = 2.0
        loop = false
      }
    }
    flameout
    {
      PREFAB_PARTICLE
      {
        prefabName = fx_exhaustSparks_flameout_2
        transformName = thrustTransform
        oneShot = true
      }
      AUDIO
      {
        channel = Ship
        clip = sound_explosion_low
        volume = 1.0
        pitch = 2.0
        loop = false
      }
    }
    fx-sc-lh2
    {
      AUDIO
      {
          channel = Ship
          clip = sound_rocket_hard
          volume = 0.0 0.0
          volume = 1.0 1.0
          pitch = 0.0 0.2
          pitch = 1.0 1.0
          loop = true
      }
      MODEL_MULTI_PARTICLE
      {
        name = core
        modelName = KerbalAtomics/FX/fx-sc-lh2-125-core
        transformName = thrustTransform
        emission = 0.0 0.0
        emission = 0.01 0.1
        emission = 0.075 0.25
        emission = 1.0 1.0
        speed = 0.0 0.35
        speed = 1.0 1.0
		localScale = 1.5, 1.5, 1.5
      }
      MODEL_MULTI_PARTICLE
      {
        name = plume
        modelName = KerbalAtomics/FX/fx-sc-lh2-125-plume
        transformName = thrustTransform
        emission = 0.0 0.0
        emission = 0.01 0.1
        emission = 0.075 0.25
        emission = 1.0 1.0
        speed = 0.0 0.35
        speed = 1.0 1.0
        localPosition = 0, 0, 1
		localScale = 1.5, 1.5, 1.5
      }
    }
    fx-sc-lf
    {
      AUDIO
      {
          channel = Ship
          clip = sound_rocket_hard
          volume = 0.0 0.0
          volume = 1.0 1.0
          pitch = 0.0 0.2
          pitch = 1.0 1.0
          loop = true
      }
      MODEL_MULTI_PARTICLE
      {
        name = core
        modelName = KerbalAtomics/FX/fx-sc-lf-125-core
        transformName = thrustTransform
        emission = 0.0 0.0
        emission = 0.01 0.1
        emission = 0.075 0.25
        emission = 1.0 1.0
        speed = 0.0 0.35
        speed = 1.0 1.0
		localScale = 1.5, 1.5, 1.5
      }
      MODEL_MULTI_PARTICLE
      {
        name = plume
        modelName =KerbalAtomics/FX/fx-sc-lf-125-plume
        transformName = thrustTransform
        emission = 0.0 0.0
        emission = 0.01 0.1
        emission = 0.075 0.25
        emission = 1.0 1.0
        speed = 0.0 0.35
        speed = 1.0 1.0
        localPosition = 0, 0, 1
		localScale = 1.5, 1.5, 1.5
      }
    }
  }
  
  @MODULE[ModuleEnginesFX]:HAS[#engineID[LH2]]
  {
    %runningEffectName = fx-sc-lh2
    %fxOffset = 0, 0, 1.5
  }

  @MODULE[ModuleEnginesFX]:HAS[#engineID[LF]]
  {
    %runningEffectName = fx-sc-lf
    %fxOffset = 0, 0, 1.5
  }
}


@PART[nuclearEngine_1p5]:NEEDS[!NTRsUseLF,MissingHistory]:AFTER[zKerbalAtomics]
{
	@engineUpgradeType = standardNuclear
	engineModeID0 = LF
	engineModeID1 = LH2
}

@PART[nuclearEngine_1p5]:NEEDS[NearFutureElectrical&MissingHistory&NearFutureElectricalNTRs] // This is a feature from LH2NTRModSupport that would be present only in this engine without NearFutureElectricalNTRs
{
	@mass -= 1.097
	
	!MODULE[ModuleAlternator] {}
	MODULE
	{
		name = ModuleUpdateOverride
	}
	MODULE
	{
		name = FissionReactor
		StartActionName = #LOC_NFElectrical_ModuleFissionReactor_Action_StartActionName
		StopActionName = #LOC_NFElectrical_ModuleFissionReactor_Action_StopActionName
		ToggleActionName = #LOC_NFElectrical_ModuleFissionReactor_Action_ToggleActionName

		// Ramp up power based on throttle
		FollowThrottle = true

		// Heat animation, plays when above nominal temp
		// OverheatAnimation = Reactor_1MW_Heat

		// Heat to generate (kW *50)
		HeatGeneration = 55000

		// Above this temp more power output but risky
		NominalTemperature = 3000
		// Above this temp, reactor takes damage
		CriticalTemperature = 3400

		MaximumTemperature = 3800

		// Amount of damage taken by core when over critical temp
		// %/s/K, so with value 0.001, at 200 K over CriticalTemp, reactor takes 0.2% damage/s
		CoreDamageRate = 0.01

		// Base lifetime calculations off this resource
		FuelName = EnrichedUranium

		INPUT_RESOURCE
		{
			ResourceName = EnrichedUranium
			Ratio = 0.00027
			FlowMode = NO_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = DepletedFuel
			Ratio = 0.00027
			DumpExcess = false
			FlowMode = NO_FLOW
		}
		// Disables stock converter functions DO NOT CHANGE
		UseSpecializationBonus = false
		AutoShutdown = false
		DefaultShutoffTemp = 0.90
		GeneratesHeat = false
		TemperatureModifier
		{
			key = 0 0
		}
	}
	MODULE
	{
		name = ModuleCoreHeatNoCatchup
		CoreTempGoal = 3000					//Internal temp goal - we don't transfer till we hit this point
		CoreToPartRatio = 0.1				//Scale back cooling if the part is this % of core temp
		CoreTempGoalAdjustment = 0			//Dynamic goal adjustment
		CoreEnergyMultiplier = 0.001		//What percentage of our core energy do we transfer to the part
		HeatRadiantMultiplier = 0.05		//If the core is hotter, how much heat radiates?
		CoolingRadiantMultiplier = 0		//If the core is colder, how much radiates?
		HeatTransferMultiplier = 0			//If the part is hotter, how much heat transfers in?
		CoolantTransferMultiplier = 0.01	//If the part is colder, how much of our energy can we transfer?
		radiatorCoolingFactor = 1			//How much energy we pull from core with an active radiator?  >= 1
		radiatorHeatingFactor = 0.01		//How much energy we push to the active radiator
		MaxCalculationWarp = 1000			//Based on how dramatic the changes are, this is the max rate of change
		CoreShutdownTemp = 3800				//At what core temperature do we shut down all generators on this part?
		MaxCoolant = 1100					//Maximum amount of radiator capacity we can consume - 50 = 1 small
	}
	MODULE
	{
		name = FissionFlowRadiator
		exhaustCooling = 1100
		maxEnergyTransfer = 55000
		CoolingDecayRate = 100
	}
	RESOURCE
	{
		name = EnrichedUranium
		amount = 100
		maxAmount = 100
	}
	RESOURCE
	{
		name = DepletedFuel
		amount = 0
		maxAmount = 100
	}
	MODULE
	{
		name = FissionEngine
		HeatUsed = 1100
		TempIspScale
		{
			key = 300 0
			key = 1000 0.2
			key = 3000 1.0
			key = 4000 1.3
		}
	}
	MODULE
	{
		name = RadioactiveStorageContainer
		DangerousFuel = DepletedFuel
		SafeFuel = EnrichedUranium
		// What enginer level is needed to transfer the safe fuel
		EngineerLevelForSafe = 1
		// What enginer level is needed to transfer the dangerous fuel
		EngineerLevelForDangerous = 3
		// Max temp for transferring fuel into or out of the part
		MaxTempForTransfer = 400
		// kW of heat per unit of waste
		HeatFluxPerWasteUnit = 5
	}
}