// Kiwi's Tech Tree Overhaul (Standardized Engine Upgrades)
// Version 0.9
// Created: 27 October 2020 for KSP 1.9.1
// Last Updated: 31 October 2020
// Special Thanks to JadeofMaar, these configs would not be possible without your work!
// 28 October 2020: Added more upgrade variants and fixed issue where the engine module in part is ModuleEngines and not ModuleEnginesFX
// 29 October 2020: Added upgrade variant for Hydrolox/Methalox engines with a custom methalox RealPlume
// 31 October 2020: Integrated the global configuration values to upgrades; Fixed another bug in the Methalox B9 Display

// Nuclear Engine Upgrade (ie. NERV)
@PART[*]:HAS[#engineUpgradeType[standardNuclear]]:NEEDS[!KerbalAtomics]:FOR[zzKiwiTechTree]
{	
	// Add these here without % or @ so they can be manually overriden by individual parts if required
	thrustMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/NUCLEAR/THRUST_MULTIPLIER$
	
	ispMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/NUCLEAR/ISP_MULTIPLIER$
	
	costMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/NUCLEAR/UPGRADE_COST_MULTIPLIER$
	massMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/NUCLEAR/UPGRADE_MASS_MULTIPLIER$
	
	//@description = #$description$ \n\n<color=#ff0000>This nuclear engine has available upgrades!</color> 
	
	upgradedThrust0 = #$MODULE[ModuleEngines*],0/maxThrust$
	@upgradedThrust0 *= #$thrustMultiplierConfig$
	
	%addCost = #$cost$
	@addCost *= #$costMultiplierConfig$
	
	%addMass = #$mass$
	@addMass *= #$massMultiplierConfig$
	
	// LFO
	key00 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0$
	@key00[1, ] *= #$ispMultiplierConfig$
	key10 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,1$
	@key10[1, ] *= #$ispMultiplierConfig$
	key20 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,2$
	@key20[1, ] *= #$ispMultiplierConfig$
	
	// LFO
	ispVac00 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	ispVac10 = #$ispVac00$
	@ispVac00 *= 10
	@ispVac00 ^= :\.\d+:: // Floor value to get an integer
	@ispVac00 /= 10
	
	@ispVac10 *= #$ispMultiplierConfig$
	@ispVac10 *= 10
	@ispVac10 ^= :\.\d+:: // Floor value to get an integer
	@ispVac10 /= 10
	
	
	ispASL00 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	ispASL10 = #$ispASL00$
	@ispASL00 *= 10
	@ispASL00 ^= :\.\d+:: // Floor value to get an integer
	@ispASL00 /= 10
	
	@ispASL10 *= #$ispMultiplierConfig$
	@ispASL10 *= 10
	@ispASL10 ^= :\.\d+:: // Floor value to get an integer
	@ispASL10 /= 10
	
	thrustMult0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	@thrustMult0 /= #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	
	
	thrustVac00 = #$MODULE[ModuleEngines*],0/maxThrust$
	@thrustVac00 *= 10
	@thrustVac00 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac00 /= 10
	
	thrustVac10 = #$upgradedThrust0$
	@thrustVac10 *= 10
	@thrustVac10 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac10 /= 10
	
	thrustASL00 = #$MODULE[ModuleEngines*],0/maxThrust$
	@thrustASL00 *= #$thrustMult0$
	@thrustASL00 *= 10
	@thrustASL00 ^= :\.\d+:: // Floor value to get an integer
	@thrustASL00 /= 10
	
	thrustASL10 = #$upgradedThrust0$
	@thrustASL10 *= #$thrustMult0$
	@thrustASL10 *= 10
	@thrustASL10 ^= :\.\d+:: // Floor value to get an integer
	@thrustASL10 /= 10
	
	
	thrustMultiplierDescription = #$thrustMultiplierConfig$
	@thrustMultiplierDescription -= 1
	@thrustMultiplierDescription *= 100
	
	ispMultiplierDescription = #$ispMultiplierConfig$
	@ispMultiplierDescription -= 1
	@ispMultiplierDescription *= 100
	
	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = engineSwitch
		switcherDescriptionPlural = Engine Models
		switcherDescription = Engine Switch

		affectDragCubes = False
		affectFARVoxels = False
		
		SUBTYPE
	    {
			name = original
			title = #$../../title$
			descriptionSummary = Original
			descriptionDetail = #<b>Thrust:</b> $../../thrustASL00$ kN ASL / $../../thrustVAC00$ kN Vac.\n<b>Isp:</b> $../../ispASL00$ s ASL / $../../ispVAC00$ s Vac.
			addedCost = 0
			defaultSubtypePriority = 1
			primaryColor = #3cff00
			secondaryColor = #ffffff
	    }
		
		SUBTYPE
	    {
			name = upgrade
			title = #$../../title$
			@title ^= #:$../../engineName$:$../../engineNameUpgrade$:
			@title ^= #:$../../engineNumber$:$../../engineNumberUpgrade$:
			descriptionSummary = #Upgrade: $../../thrustMultiplierDescription$% Increased Thrust, $../../ispMultiplierDescription$% Increased Specific Impulse.
			descriptionDetail = #<b>Thrust:</b> $../../thrustASL10$ kN ASL / $../../thrustVAC10$ kN Vac.\n<b>Isp:</b> $../../ispASL10$ s ASL / $../../ispVAC10$ s Vac.
			upgradeRequired = #$../../enginePartUpgradeName$
			addedCost = #$../../addCost$
			addedMass = #$../../addMass$
			defaultSubtypePriority = 0
			primaryColor = #218e00
			secondaryColor = #ffffff

			MODULE
			{
			    IDENTIFIER
			    {
					name = ModuleEngines*
			    }

			    DATA
			    {
					maxThrust = #$../../../../upgradedThrust0$
					atmosphereCurve
					{
						key = #$../../../../../key00$
						key = #$../../../../../key10$
						key = #$../../../../../key20$
					}
				}			    
			}
	    }
	}	
}

@PART[*]:HAS[#engineUpgradeType[standardNuclear]]:NEEDS[KerbalAtomics]:FOR[zzKiwiTechTree]
{	
	// Add these here without % or @ so they can be manually overriden by individual parts if required
	thrustMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/NUCLEAR/THRUST_MULTIPLIER$
	
	ispMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/NUCLEAR/ISP_MULTIPLIER$
	
	costMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/NUCLEAR/UPGRADE_COST_MULTIPLIER$
	massMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/NUCLEAR/UPGRADE_MASS_MULTIPLIER$
	
	//@description = #$description$ \n\n<color=#ff0000>This nuclear engine has available upgrades!</color> 
	
	upgradedThrust0 = #$MODULE[ModuleEngines*],0/maxThrust$
	@upgradedThrust0 *= #$thrustMultiplierConfig$
	
	upgradedThrust1 = #$MODULE[ModuleEngines*],1/maxThrust$
	@upgradedThrust1 *= #$thrustMultiplierConfig$
	
	
	%addCost = #$cost$
	@addCost *= #$costMultiplierConfig$
	
	%addMass = #$mass$
	@addMass *= #$massMultiplierConfig$
	
	// LH2
	key00 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0$
	@key00[1, ] *= #$ispMultiplierConfig$
	key10 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,1$
	@key10[1, ] *= #$ispMultiplierConfig$
	key20 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,2$
	@key20[1, ] *= #$ispMultiplierConfig$
	
	// LFO
	key01 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,0$
	@key01[1, ] *= #$ispMultiplierConfig$
	key11 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,1$
	@key11[1, ] *= #$ispMultiplierConfig$
	key21 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,2$
	@key21[1, ] *= #$ispMultiplierConfig$
	
		
	// LH2
	ispVac00 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	ispVac10 = #$ispVac00$
	@ispVac00 *= 10
	@ispVac00 ^= :\.\d+:: // Floor value to get an integer
	@ispVac00 /= 10
	
	@ispVac10 *= #$ispMultiplierConfig$
	@ispVac10 *= 10
	@ispVac10 ^= :\.\d+:: // Floor value to get an integer
	@ispVac10 /= 10
	
	
	ispASL00 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	ispASL10 = #$ispASL00$
	@ispASL00 *= 10
	@ispASL00 ^= :\.\d+:: // Floor value to get an integer
	@ispASL00 /= 10
	
	@ispASL10 *= #$ispMultiplierConfig$
	@ispASL10 *= 10
	@ispASL10 ^= :\.\d+:: // Floor value to get an integer
	@ispASL10 /= 10
	
	thrustMult0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	@thrustMult0 /= #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	
	
	thrustVac00 = #$MODULE[ModuleEngines*],0/maxThrust$
	@thrustVac00 *= 10
	@thrustVac00 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac00 /= 10
	
	thrustVac10 = #$upgradedThrust0$
	@thrustVac10 *= 10
	@thrustVac10 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac10 /= 10
	
	thrustASL00 = #$MODULE[ModuleEngines*],0/maxThrust$
	@thrustASL00 *= #$thrustMult0$
	@thrustASL00 *= 10
	@thrustASL00 ^= :\.\d+:: // Floor value to get an integer
	@thrustASL00 /= 10
	
	thrustASL10 = #$upgradedThrust0$
	@thrustASL10 *= #$thrustMult0$
	@thrustASL10 *= 10
	@thrustASL10 ^= :\.\d+:: // Floor value to get an integer
	@thrustASL10 /= 10
	
	// For reasons that are not clear thrustVac00 is throwing an error
	test = #$MODULE[ModuleEngines*],0/maxThrust$
	@test *= 10
	@test ^= :\.\d+::
	@test /= 10
	
	test2 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0[1, ]$
	@test2 *= 10
	@test2 ^= :\.\d+::
	@tes2 /= 10
	
	test3 = #$upgradedThrust0$
	@test3 *= 10
	@test3 ^= :\.\d+::
	@test3 /= 10
	
	test4 = #$ispMultiplierConfig$
	@test4 *= 10
	@test4 ^= :\.\d+::
	@test4 /= 10
	
	// LFO
	ispVac01 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	ispVac11 = #$ispVac01$
	@ispVac01 *= 10
	@ispVac01 ^= :\.\d+:: // Floor value to get an integer
	@ispVac01 /= 10
	
	@ispVac11 *= #$ispMultiplierConfig$
	@ispVac11 *= 10
	@ispVac11 ^= :\.\d+:: // Floor value to get an integer
	@ispVac11 /= 10
	
	
	ispASL01 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	ispASL11 = #$ispASL01$
	@ispASL01 *= 10
	@ispASL01 ^= :\.\d+:: // Floor value to get an integer
	@ispASL01 /= 10
	
	@ispASL11 *= #$ispMultiplierConfig$
	@ispASL11 *= 10
	@ispASL11 ^= :\.\d+:: // Floor value to get an integer
	@ispASL11 /= 10
	
	thrustMult1 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	@thrustMult1 /= #$MODULE[ModuleEngines*],1/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	
	
	thrustVac01 = #$MODULE[ModuleEngines*],1/maxThrust$
	@thrustVac01 *= 10
	@thrustVac01 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac01 /= 10
	
	thrustVac11 = #$upgradedThrust1$
	@thrustVac11 *= 10
	@thrustVac11 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac11 /= 10
	
	thrustASL01 = #$MODULE[ModuleEngines*],1/maxThrust$
	@thrustASL01 *= #$thrustMult1$
	@thrustASL01 *= 10
	@thrustASL01 ^= :\.\d+:: // Floor value to get an integer
	@thrustASL01 /= 10
	
	thrustASL11 = #$upgradedThrust1$
	@thrustASL11 *= #$thrustMult1$
	@thrustASL11 *= 10
	@thrustASL11 ^= :\.\d+:: // Floor value to get an integer
	@thrustASL11 /= 10
	
	thrustMultiplierDescription = #$thrustMultiplierConfig$
	@thrustMultiplierDescription -= 1
	@thrustMultiplierDescription *= 100
	
	ispMultiplierDescription = #$ispMultiplierConfig$
	@ispMultiplierDescription -= 1
	@ispMultiplierDescription *= 100
	
	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = engineSwitch
		switcherDescriptionPlural = Engine Models
		switcherDescription = Engine Switch

		affectDragCubes = False
		affectFARVoxels = False
		
		SUBTYPE
	    {
			name = original
			title = #$../../title$
			descriptionSummary = Original
			descriptionDetail = #Mode: $../../engineModeID0$\n<b>Thrust:</b> $../../thrustASL00$ kN ASL / $../../test$ kN Vac. \n<b>ISP:</b> $../../ispASL00$ s ASL / $../../test2$ s Vac. \n\n Mode: $../../engineModeID1$\n<b>Thrust:</b> $../../thrustASL01$ kN ASL / $../../thrustVac01$ kN Vac. \n<b>ISP:</b> $../../ispASL01$ s ASL / $../../ispVac01$ s Vac. \n\n
			//descriptionDetail = #<b>Thrust:</b> $../../test$ kN ASL
			//  $../../thrustVAC00$ kN Vac. \n <b>ISP:</b> $../../ispASL00$ s ASL / $../../ispVAC00$ s Vac.
			addedCost = 0
			defaultSubtypePriority = 1
			primaryColor = #3cff00
			secondaryColor = #ffffff
	    }
		
		SUBTYPE
	    {
			name = upgrade
			title = #$../../title$
			@title ^= #:$../../engineName$:$../../engineNameUpgrade$:
			@title ^= #:$../../engineNumber$:$../../engineNumberUpgrade$:
			descriptionSummary = #Upgrade: $../../thrustMultiplierDescription$% Increased Thrust, $../../ispMultiplierDescription$% Increased Specific Impulse.
			descriptionDetail = #Mode: $../../engineModeID0$\n<b>Thrust:</b> $../../thrustASL10$ kN ASL / $../../test3$ kN Vac. \n<b>ISP:</b> $../../ispASL10$ s ASL / $../../test4$ s Vac. \n\n Mode: $../../engineModeID1$\n<b>Thrust:</b> $../../thrustASL11$ kN ASL / $../../thrustVac11$ kN Vac. \n<b>ISP:</b> $../../ispASL11$ s ASL / $../../ispVac11$ s Vac. \n\n
			upgradeRequired = #$../../enginePartUpgradeName$
			addedCost = #$../../addCost$
			addedMass = #$../../addMass$
			defaultSubtypePriority = 0
			primaryColor = #218e00
			secondaryColor = #ffffff

			MODULE
			{
			    IDENTIFIER
			    {
					name = ModuleEngines*
					engineID = #$../../../../engineModeID0$
			    }

			    DATA
			    {
					maxThrust = #$../../../../upgradedThrust0$
					atmosphereCurve
					{
						key = #$../../../../../key00$
						key = #$../../../../../key10$
						key = #$../../../../../key20$
					}
				}			    
			}
			
			MODULE
			{
			    IDENTIFIER
			    {
					name = ModuleEngines*
					engineID = #$../../../../engineModeID1$
			    }

			    DATA
			    {
					maxThrust = #$../../../../upgradedThrust1$
					atmosphereCurve
					{
						key = #$../../../../../key01$
						key = #$../../../../../key11$
						key = #$../../../../../key21$
					}
				}			    
			}
	    }
	}	
}