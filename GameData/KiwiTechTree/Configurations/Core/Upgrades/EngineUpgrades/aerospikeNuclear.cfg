// Nuclear Engine Upgrade (ie. NERV)
@PART[*]:HAS[#engineUpgradeType[aerospikeNuclear]]:NEEDS[KerbalAtomics]:FOR[zzKiwiTechTree]
{	
	kerbalismReliability = true
	// Add these here without % or @ so they can be manually overriden by individual parts if required
	thrustMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/NUCLEAR/THRUST_MULTIPLIER$
	
	ispMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/NUCLEAR/ISP_MULTIPLIER$
	
	costMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/NUCLEAR/UPGRADE_COST_MULTIPLIER$
	massMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/NUCLEAR/UPGRADE_MASS_MULTIPLIER$
	
	%addCost = #$cost$
	@addCost *= #$costMultiplierConfig$
	
	%addMass = #$mass$
	@addMass *= #$massMultiplierConfig$
	
	// Engine Module 0
	upgradedThrust0_0 = #$MODULE[ModuleEngines*],0/maxThrust$
	@upgradedThrust0_0 *= #$thrustMultiplierConfig$
		
	key0_0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0$
	@key0_0[1, ] *= #$ispMultiplierConfig$
	key1_0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,1$
	@key1_0[1, ] *= #$ispMultiplierConfig$
	key2_0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,2$
	@key2_0[1, ] *= #$ispMultiplierConfig$
	key3_0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,3$
	@key3_0[1, ] *= #$ispMultiplierConfig$
	key4_0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,4$
	@key4_0[1, ] *= #$ispMultiplierConfig$
	
	// LFO
	ispVac0_0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	ispVac1_0 = #$ispVac0_0$
	@ispVac0_0 *= 10
	@ispVac0_0 ^= :\.\d+:: // Floor value to get an integer
	@ispVac0_0 /= 10
	
	@ispVac1_0 *= #$ispMultiplierConfig$
	@ispVac1_0 *= 10
	@ispVac1_0 ^= :\.\d+:: // Floor value to get an integer
	@ispVac1_0 /= 10
	
	
	ispASL0_0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	ispASL1_0 = #$ispASL0_0$
	@ispASL0_0 *= 10
	@ispASL0_0 ^= :\.\d+:: // Floor value to get an integer
	@ispASL0_0 /= 10
	
	@ispASL1_0 *= #$ispMultiplierConfig$
	@ispASL1_0 *= 10
	@ispASL1_0 ^= :\.\d+:: // Floor value to get an integer
	@ispASL1_0 /= 10
	
	isp10Atm0_0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,3[1, ]$ // get ASL Isp number
	isp10Atm1_0 = #$isp10Atm0_0$
	@isp10Atm0_0 *= 10
	@isp10Atm0_0 ^= :\.\d+:: // Floor value to get an integer
	@isp10Atm0_0 /= 10
	
	@isp10Atm1_0 *= #$ispMultiplierConfig$
	@isp10Atm1_0 *= 10
	@isp10Atm1_0 ^= :\.\d+:: // Floor value to get an integer
	@isp10Atm1_0 /= 10
	
	thrustMult0_0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	@thrustMult0_0 /= #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	
	thrustMult20_0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,3[1, ]$ // get ASL Isp number
	@thrustMult20_0 /= #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	
	
	thrustVac0_0 = #$MODULE[ModuleEngines*],0/maxThrust$
	@thrustVac0_0 *= 10
	@thrustVac0_0 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac0_0 /= 10
	
	thrustVac1_0 = #$upgradedThrust0_0$
	@thrustVac1_0 *= 10
	@thrustVac1_0 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac1_0 /= 10
	
	thrustASL0_0 = #$MODULE[ModuleEngines*],0/maxThrust$
	@thrustASL0_0 *= #$thrustMult0_0$
	@thrustASL0_0 *= 10
	@thrustASL0_0 ^= :\.\d+:: // Floor value to get an integer
	@thrustASL0_0 /= 10
	
	thrustASL1_0 = #$upgradedThrust0_0$
	@thrustASL1_0 *= #$thrustMult0_0$
	@thrustASL1_0 *= 10
	@thrustASL1_0 ^= :\.\d+:: // Floor value to get an integer
	@thrustASL1_0 /= 10
	
	thrust10Atm0_0 = #$MODULE[ModuleEngines*],0/maxThrust$
	@thrust10Atm0_0 *= #$thrustMult20_0$
	@thrust10Atm0_0 *= 10
	@thrust10Atm0_0 ^= :\.\d+:: // Floor value to get an integer
	@thrust10Atm0_0 /= 10
	
	thrust10Atm1_0 = #$upgradedThrust0_0$
	@thrust10Atm1_0 *= #$thrustMult20_0$
	@thrust10Atm1_0 *= 10
	@thrust10Atm1_0 ^= :\.\d+:: // Floor value to get an integer
	@thrust10Atm1_0 /= 10
	
	
	// Engine Module 1
	upgradedThrust0_1 = #$MODULE[ModuleEngines*],1/maxThrust$
	@upgradedThrust0_1 *= #$thrustMultiplierConfig$
		
	key0_1 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,0$
	@key0_1[1, ] *= #$ispMultiplierConfig$
	key1_1 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,1$
	@key1_1[1, ] *= #$ispMultiplierConfig$
	key2_1 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,2$
	@key2_1[1, ] *= #$ispMultiplierConfig$
	key3_1 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,3$
	@key3_1[1, ] *= #$ispMultiplierConfig$
	key4_1 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,4$
	@key4_1[1, ] *= #$ispMultiplierConfig$
	
	// LFO
	ispVac0_1 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	ispVac1_1 = #$ispVac0_1$
	@ispVac0_1 *= 10
	@ispVac0_1 ^= :\.\d+:: // Floor value to get an integer
	@ispVac0_1 /= 10
	
	@ispVac1_1 *= #$ispMultiplierConfig$
	@ispVac1_1 *= 10
	@ispVac1_1 ^= :\.\d+:: // Floor value to get an integer
	@ispVac1_1 /= 10
	
	
	ispASL0_1 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	ispASL1_1 = #$ispASL0_1$
	@ispASL0_1 *= 10
	@ispASL0_1 ^= :\.\d+:: // Floor value to get an integer
	@ispASL0_1 /= 10
	
	@ispASL1_1 *= #$ispMultiplierConfig$
	@ispASL1_1 *= 10
	@ispASL1_1 ^= :\.\d+:: // Floor value to get an integer
	@ispASL1_1 /= 10
	
	isp10Atm0_1 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,3[1, ]$ // get ASL Isp number
	isp10Atm1_1 = #$isp10Atm0_1$
	@isp10Atm0_1 *= 10
	@isp10Atm0_1 ^= :\.\d+:: // Floor value to get an integer
	@isp10Atm0_1 /= 10
	
	@isp10Atm1_1 *= #$ispMultiplierConfig$
	@isp10Atm1_1 *= 10
	@isp10Atm1_1 ^= :\.\d+:: // Floor value to get an integer
	@isp10Atm1_1 /= 10
	
	thrustMult0_1 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	@thrustMult0_1 /= #$MODULE[ModuleEngines*],1/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	
	thrustMult20_1 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,3[1, ]$ // get ASL Isp number
	@thrustMult20_1 /= #$MODULE[ModuleEngines*],1/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	
	thrustVac0_1 = #$MODULE[ModuleEngines*],1/maxThrust$
	@thrustVac0_1 *= 10
	@thrustVac0_1 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac0_1 /= 10
	
	thrustVac1_1 = #$upgradedThrust0_1$
	@thrustVac1_1 *= 10
	@thrustVac1_1 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac1_1 /= 10
	
	thrustASL0_1 = #$MODULE[ModuleEngines*],1/maxThrust$
	@thrustASL0_1 *= #$thrustMult0_1$
	@thrustASL0_1 *= 10
	@thrustASL0_1 ^= :\.\d+:: // Floor value to get an integer
	@thrustASL0_1 /= 10
	
	thrustASL1_1 = #$upgradedThrust0_1$
	@thrustASL1_1 *= #$thrustMult0_1$
	@thrustASL1_1 *= 10
	@thrustASL1_1 ^= :\.\d+:: // Floor value to get an integer
	@thrustASL1_1 /= 10
	
	thrust10Atm0_1 = #$MODULE[ModuleEngines*],1/maxThrust$
	@thrust10Atm0_1 *= #$thrustMult20_1$
	@thrust10Atm0_1 *= 10
	@thrust10Atm0_1 ^= :\.\d+:: // Floor value to get an integer
	@thrust10Atm0_1 /= 10
	
	thrust10Atm1_1 = #$upgradedThrust0_1$
	@thrust10Atm1_1 *= #$thrustMult20_1$
	@thrust10Atm1_1 *= 10
	@thrust10Atm1_1 ^= :\.\d+:: // Floor value to get an integer
	@thrust10Atm1_1 /= 10
	
	
	thrustMultiplierDescription = #$thrustMultiplierConfig$
	@thrustMultiplierDescription -= 1
	@thrustMultiplierDescription *= 100
	
	ispMultiplierDescription = #$ispMultiplierConfig$
	@ispMultiplierDescription -= 1
	@ispMultiplierDescription *= 100
	
	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = engineSwitch
		switcherDescriptionPlural = Engine Models
		switcherDescription = Engine Switch

		affectDragCubes = False
		affectFARVoxels = False
		
		SUBTYPE
	    {
			name = original
			title = #$../../title$
			descriptionSummary = Original
			descriptionDetail = #<b>Mode:</b> $../../engineModeID0$\n<b>Thrust:</b> $../../thrustASL0_0$ kN ASL / KnownError kN Vac.\n<b>Isp:</b> $../../ispASL0_0$ s ASL / KnownError s Vac.\n\n<b>Mode:</b> $../../engineModeID1$\n<b>Thrust:</b> $../../thrustASL0_1$ kN ASL / KnownError kN Vac.\n<b>Isp:</b> $../../ispASL0_1$ s ASL / KnownError s Vac.
			//descriptionDetail = #<b>Thrust:</b> $../../thrust10atm0_0$ kN 10atm / $../../thrustASL0_0$ kN ASL / KnownError kN Vac.\n<b>Isp:</b> $../../isp10atm0_0$ s 10atm / $../../ispASL0_0$ s ASL / KnownError s Vac.\n\n<b>Thrust:</b> $../../thrust10atm0_1$ kN 10atm / $../../thrustASL0_1$ kN ASL / KnownError kN Vac.\n<b>Isp:</b> $../../isp10atm0_1$ s 10atm / $../../ispASL0_1$ s ASL / KnownError s Vac.
			addedCost = 0
			defaultSubtypePriority = 1
			primaryColor = #3cff00
			secondaryColor = #ffffff
	    }
		
		SUBTYPE
	    {
			name = upgrade
			title = #$../../title$
			@title ^= #:$../../engineName$:$../../engineNameUpgrade$:
			@title ^= #:$../../engineNumber$:$../../engineNumberUpgrade$:
			descriptionSummary = #Upgrade: $../../thrustMultiplierDescription$% Increased Thrust, $../../ispMultiplierDescription$% Increased Specific Impulse.
			descriptionDetail = #<b>Mode:</b> $../../engineModeID0$\n<b>Thrust:</b> $../../thrustASL1_0$ kN ASL / KnownError kN Vac.\n<b>Isp:</b> $../../ispASL1_0$ s ASL / KnownError s Vac.\n\n<b>Mode:</b> $../../engineModeID1$\n<b>Thrust:</b> $../../thrustASL1_1$ kN ASL / KnownError kN Vac.\n<b>Isp:</b> $../../ispASL1_1$ s ASL / KnownError s Vac.
			//descriptionDetail = #<b>Thrust:</b> $../../thrust10atm1_0$ kN 10atm / $../../thrustASL1_0$ kN ASL / KnownError kN Vac.\n<b>Isp:</b> $../../isp10atm1_0$ s 10atm / $../../ispASL1_0$ s ASL / KnownError s Vac.\n\n<b>Thrust:</b> $../../thrust10atm1_1$ kN 10atm / $../../thrustASL1_1$ kN ASL / KnownError kN Vac.\n<b>Isp:</b> $../../isp10atm1_1$ s 10atm / $../../ispASL1_1$ s ASL / KnownError s Vac.
			upgradeRequired = #$../../enginePartUpgradeName$
			addedCost = #$../../addCost$
			addedMass = #$../../addMass$
			defaultSubtypePriority = 0
			primaryColor = #218e00
			secondaryColor = #ffffff

			MODULE
			{
			    IDENTIFIER
			    {
					name = ModuleEngines*
					engineID = #$../../../../engineModeID0$
			    }

			    DATA
			    {
					maxThrust = #$../../../../upgradedThrust0_0$
					atmosphereCurve
					{
						key = #$../../../../../key0_0$
						key = #$../../../../../key1_0$
						key = #$../../../../../key2_0$
						key = #$../../../../../key3_0$
						key = #$../../../../../key4_0$
					}
				}			    
			}
			
			MODULE
			{
			    IDENTIFIER
			    {
					name = ModuleEngines*
					engineID = #$../../../../engineModeID1$
			    }

			    DATA
			    {
					maxThrust = #$../../../../upgradedThrust0_1$
					atmosphereCurve
					{
						key = #$../../../../../key0_1$
						key = #$../../../../../key1_1$
						key = #$../../../../../key2_1$
						key = #$../../../../../key3_1$
						key = #$../../../../../key4_1$
					}
				}			    
			}
	    }
	}	
}