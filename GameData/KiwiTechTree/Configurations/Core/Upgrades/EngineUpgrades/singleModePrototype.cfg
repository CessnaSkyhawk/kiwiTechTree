

// Standard Single Fuel Engine Prototype
@PART[*]:HAS[#kiwiEngineUpgradeType[singleMode],~engineUpgrade[off],#kiwiBaseFuel[kerolox]]:BEFORE[zzKiwiTechTree]
{	
	kerbalismReliability = true
	thrustMult = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	@thrustMult /= #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	
	// Add these here without % or @ so they can be manually overriden by individual parts if required as MM should grab the first instance 
	prototypeThrustMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/KEROLOX/PROTOTYPE_THRUST_MULTIPLIER$
	prototypeISPMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/KEROLOX/PROTOTYPE_ISP_MULTIPLIER$
	prototypeCostMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/KEROLOX/PROTOTYPE_COST_MULTIPLIER$
	prototypeMassMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/KEROLOX/PROTOTYPE_MASS_MULTIPLIER$
	
	
	%addCost_P = #$cost$
	@addCost_P *= #$prototypeCostMultiplierConfig$
	
	%addMass_P = #$mass$
	@addMass_P *= #$prototypeMassMultiplierConfig$
	
	// Storing the baseline thrust as well
	prototypeThrust_0 = #$MODULE[ModuleEngines*],0/maxThrust$
	@prototypeThrust_0 *= #$prototypeThrustMultiplierConfig$
		
	key0_P_0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0$
	@key0_P_0[1, ] *= #$prototypeISPMultiplierConfig$
	key1_P_0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,1$
	@key1_P_0[1, ] *= #$prototypeISPMultiplierConfig$
	key2_P_0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,2$
	@key2_P_0[1, ] *= #$prototypeISPMultiplierConfig$
	
	ispVac_P_0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	@ispVac_P_0 *= #$prototypeISPMultiplierConfig$
	@ispVac_P_0 *= 10
	@ispVac_P_0 ^= :\.\d+:: // Floor value to get an integer
	@ispVac_P_0 /= 10
	
	ispASL_P_0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	@ispASL_P_0 *= #$prototypeISPMultiplierConfig$
	@ispASL_P_0 *= 10
	@ispASL_P_0 ^= :\.\d+:: // Floor value to get an integer
	@ispASL_P_0 /= 10
	
	thrustVac_P_0 = #$MODULE[ModuleEngines*],0/maxThrust$
	@thrustVac_P_0 *= #$prototypeThrustMultiplierConfig$
	@thrustVac_P_0 *= 10
	@thrustVac_P_0 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac_P_0 /= 10
	
	thrustASL_P_0 = #$MODULE[ModuleEngines*],0/maxThrust$
	@thrustASL_P_0 *= #$prototypeThrustMultiplierConfig$
	@thrustASL_P_0 *= #$thrustMult$
	@thrustASL_P_0 *= 10
	@thrustASL_P_0 ^= :\.\d+:: // Floor value to get an integer
	@thrustASL_P_0 /= 10
	
	
	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = kiwiEngineSwitch
		switcherDescriptionPlural = #LOC_KTT_B9DESCRIPTIONPLURALS_ENGINESWITCH
		switcherDescription = #LOC_KTT_B9DESCRIPTION_ENGINESWITCH

		affectDragCubes = False
		affectFARVoxels = False
		
		SUBTYPE
	    {
			name = prototype
			title = #LOC_KTT_B9TITLE_PROTOTYPE_KEROLOX
			descriptionDetail = #<b>Thrust:</b> $../../thrustASL_P_0$ kN ASL / $../../thrustVac_P_0$ kN Vac.\n<b>Isp:</b> $../../ispASL_P_0$ s ASL / $../../ispVac_P_0$ s Vac.
			addedCost = #$../../addCost_P$
			addedMass = #$../../addMass_P$
			defaultSubtypePriority = 0
			primaryColor = #38FF38
			secondaryColor = ResourceColorLiquidFuel

			MODULE
			{
			    IDENTIFIER
			    {
					name = ModuleEngines*
			    }

			    DATA
			    {
					maxThrust = #$../../../../prototypeThrust_0$
					atmosphereCurve
					{
						key = #$../../../../../key0_P_0$
						key = #$../../../../../key1_P_0$
						key = #$../../../../../key2_P_0$
					}
				}			    
			}
	    }
	}	
}