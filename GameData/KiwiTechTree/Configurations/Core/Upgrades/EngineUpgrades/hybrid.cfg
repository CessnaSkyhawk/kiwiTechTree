// Kiwi's Tech Tree Overhaul (Standardized Engine Upgrades)
// Version 0.9
// Created: 27 October 2020 for KSP 1.9.1
// Last Updated: 31 October 2020
// Special Thanks to JadeofMaar, these configs would not be possible without your work!
// 28 October 2020: Added more upgrade variants and fixed issue where the engine module in part is ModuleEngines and not ModuleEnginesFX
// 29 October 2020: Added upgrade variant for Hydrolox/Methalox engines with a custom methalox RealPlume
// 31 October 2020: Integrated the global configuration values to upgrades; Fixed another bug in the Methalox B9 Display

// Dual-Mode Jet/Rocket Engine Upgrade (ie. R.A.P.I.E.R.)
@PART[*]:HAS[#engineUpgradeType[hybrid]]:FOR[zzKiwiTechTree]
{	
	// Add these here without % or @ so they can be manually overriden by individual parts if required
	thrustAirMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/HYBRID/THRUST_AIR_MULTIPLIER$
	thrustClosedMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/HYBRID/THRUST_CLOSED_MULTIPLIER$
	
	ispAirMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/HYBRID/ISP_AIR_MULTIPLIER$
	ispClosedMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/HYBRID/ISP_CLOSED_MULTIPLIER$
	
	costMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/HYBRID/UPGRADE_COST_MULTIPLIER$
	massMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/HYBRID/UPGRADE_MASS_MULTIPLIER$
	
	@description = #$description$ \n\n<color=#ff0000>This hybrid engine has available upgrades!</color> 
	
	upgradedThrust0 = #$MODULE[ModuleEngines*],0/maxThrust$
	@upgradedThrust0 *= #$thrustAirMultiplierConfig$
	
	upgradedThrust1 = #$MODULE[ModuleEngines*],1/maxThrust$
	@upgradedThrust1 *= #$thrustClosedMultiplierConfig$
	
	
	%addCost = #$cost$
	@addCost *= #$costMultiplierConfig$
	
	%addMass = #$mass$
	@addMass *= #$massMultiplierConfig$
	
	// Air Breathing
	key00 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0$
	@key00[1, ] *= #$ispAirMultiplierConfig$
	
	// Closed Cycle
	key01 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,0$
	@key01[1, ] *= #$ispClosedMultiplierConfig$
	key11 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,1$
	@key11[1, ] *= #$ispClosedMultiplierConfig$
	key21 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,2$
	@key21[1, ] *= #$ispClosedMultiplierConfig$
	
	// Air-Breathing	
	ispAtm0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	ispAtm1 = #$ispAtm0$
	@ispAtm0 *= 10
	@ispAtm0 ^= :\.\d+:: // Floor value to get an integer
	@ispAtm0 /= 10
	
	@ispAtm1 *= #$ispAirMultiplierConfig$
	@ispAtm1 *= 10
	@ispAtm1 ^= :\.\d+:: // Floor value to get an integer
	@ispAtm1 /= 10
	
	thrustAtm0 = #$MODULE[ModuleEngines*],0/maxThrust$
	@thrustAtm0 *= 10
	@thrustAtm0 ^= :\.\d+:: // Floor value to get an integer
	@thrustAtm0 /= 10
	
	thrustAtm1 = #$upgradedThrust0$
	@thrustAtm1 *= 10
	@thrustAtm1 ^= :\.\d+:: // Floor value to get an integer
	@thrustAtm1 /= 10
	
	// Closed-Cycle
	ispVac01 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	ispVac11 = #$ispVac01$
	@ispVac01 *= 10
	@ispVac01 ^= :\.\d+:: // Floor value to get an integer
	@ispVac01 /= 10
	
	@ispVac11 *= #$ispClosedMultiplierConfig$
	@ispVac11 *= 10
	@ispVac11 ^= :\.\d+:: // Floor value to get an integer
	@ispVac11 /= 10
	
	
	ispASL01 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	ispASL11 = #$ispASL01$
	@ispASL01 *= 10
	@ispASL01 ^= :\.\d+:: // Floor value to get an integer
	@ispASL01 /= 10
	
	@ispASL11 *= #$ispClosedMultiplierConfig$
	@ispASL11 *= 10
	@ispASL11 ^= :\.\d+:: // Floor value to get an integer
	@ispASL11 /= 10
	
	thrustMult = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	@thrustMult /= #$MODULE[ModuleEngines*],1/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	
	
	thrustVac01 = #$MODULE[ModuleEngines*],1/maxThrust$
	@thrustVac01 *= 10
	@thrustVac01 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac01 /= 10
	
	thrustVac11 = #$upgradedThrust1$
	@thrustVac11 *= 10
	@thrustVac11 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac11 /= 10
	
	thrustASL01 = #$MODULE[ModuleEngines*],1/maxThrust$
	@thrustASL01 *= #$thrustMult$
	@thrustASL01 *= 10
	@thrustASL01 ^= :\.\d+:: // Floor value to get an integer
	@thrustASL01 /= 10
	
	thrustASL11 = #$upgradedThrust1$
	@thrustASL11 *= #$thrustMult$
	@thrustASL11 *= 10
	@thrustASL11 ^= :\.\d+:: // Floor value to get an integer
	@thrustASL11 /= 10
	
	thrustAirMultiplierDescription = #$thrustAirMultiplierConfig$
	@thrustAirMultiplierDescription -= 1
	@thrustAirMultiplierDescription *= 100
	
	ispAirMultiplierDescription = #$ispAirMultiplierConfig$
	@ispAirMultiplierDescription -= 1
	@ispAirMultiplierDescription *= 100
	
	thrustClosedMultiplierDescription = #$thrustClosedMultiplierConfig$
	@thrustClosedMultiplierDescription -= 1
	@thrustClosedMultiplierDescription *= 100
	
	ispClosedMultiplierDescription = #$ispClosedMultiplierConfig$
	@ispClosedMultiplierDescription -= 1
	@ispClosedMultiplierDescription *= 100
	
	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = engineSwitch
		switcherDescriptionPlural = Engine Models
		switcherDescription = Engine Switch

		affectDragCubes = False
		affectFARVoxels = False
		
		SUBTYPE
	    {
			name = original
			title = #$../../title$
			descriptionSummary = Original
			descriptionDetail = #Mode: $../../engineModeID0$\n<b>Stationary Thrust:</b> $../../thrustAtm0$ kN \n<b>Isp:</b> $../../ispAtm0$ s ASL\n\nMode: $../../engineModeID1$\n<b>Thrust:</b> $../../thrustASL01$ kN ASL / $../../thrustVac01$ kN Vac.\n<b>Isp:</b> $../../ispASL01$ s ASL / $../../ispVac01$ s Vac.
			addedCost = 0
			defaultSubtypePriority = 1
			primaryColor = #3cff00
			secondaryColor = #bfa760
	    }
		
		SUBTYPE
	    {
			name = upgrade
			title = #$../../title$
			@title ^= #:$../../engineName$:$../../engineNameUpgrade$:
			@title ^= #:$../../engineNumber$:$../../engineNumberUpgrade$:
			descriptionSummary = #Upgrade:\nMode: $../../engineModeID0$\n$../../thrustAirMultiplierDescription$% Increased Thrust, $../../ispAirMultiplierDescription$% Increased Specific Impulse.\nMode: $../../engineModeID1$\n$../../thrustClosedMultiplierDescription$% Increased Thrust, $../../ispClosedMultiplierDescription$% Increased Specific Impulse.
			descriptionDetail = #Mode: $../../engineModeID0$\n<b>Stationary Thrust:</b> $../../thrustAtm1$ kN \n<b>Isp:</b> $../../ispAtm1$ s ASL\n\nMode: $../../engineModeID1$\n<b>Thrust:</b> $../../thrustASL11$ kN ASL / $../../thrustVac11$ kN Vac.\n<b>Isp:</b> $../../ispASL11$ s ASL / $../../ispVac11$ s Vac.
			upgradeRequired = #$../../enginePartUpgradeName$
			addedCost = #$../../addCost$
			addedMass = #$../../addMass$
			defaultSubtypePriority = 0
			primaryColor = #218e00
			secondaryColor = #bfa760

			MODULE
			{
			    IDENTIFIER
			    {
					name = ModuleEngines*
					engineID = #$../../../../engineModeID0$
			    }

			    DATA
			    {
					maxThrust = #$../../../../upgradedThrust0$
					atmosphereCurve
					{
						key = #$../../../../../key00$
					}
				}			    
			}
			
			MODULE
			{
			    IDENTIFIER
			    {
					name = ModuleEngines*
					engineID = #$../../../../engineModeID1$
			    }

			    DATA
			    {
					maxThrust = #$../../../../upgradedThrust1$
					atmosphereCurve
					{
						key = #$../../../../../key01$
						key = #$../../../../../key11$
						key = #$../../../../../key21$
					}
				}			    
			}
	    }
	}	
}