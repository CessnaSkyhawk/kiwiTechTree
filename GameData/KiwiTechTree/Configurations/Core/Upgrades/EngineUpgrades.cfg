// Kiwi's Tech Tree Overhaul (Standardized Engine Upgrades)
// Version 0.9
// Created: 27 October 2020 for KSP 1.9.1
// Last Updated: 28 October 2020
// Special Thanks to JadeofMaar, these configs would not be possible without your work!
// 28 October 2020: Added more upgrade variants and fixed issue where the engine module was ModuleEngines and not ModuleEnginesFX

// Standard LFO Engine Upgrade
@PART[*]:HAS[#engineUpgradeType[standardLFO]]:FOR[zzKiwiTechTree]
{	
	@description = #$description$ \n\n<color=#ff0000>This part has upgrades!</color> 
	
	upgradedThrust0 = #$MODULE[ModuleEngines*],0/maxThrust$
	@upgradedThrust0 *= 1.2
	
	%addCost = #$cost$
	@addCost *= 0.5
	
	%addMass = #$mass$
	@addMass *= 0.1
	
	// These are technically the same, but want to leave it open to alter in the future
	key00 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0$
	@key00[1, ] *= 1.1
	key10 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,1$
	@key10[1, ] *= 1.1
	key20 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,2$
	@key20[1, ] *= 1.1
	
	ispVac0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	ispVac1 = #$ispVac0$
	@ispVac0 *= 10
	@ispVac0 ^= :\.\d+:: // Floor value to get an integer
	@ispVac0 /= 10
	
	ispASL0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	ispASL1 = #$ispASL0$
	@ispASL0 *= 10
	@ispASL0 ^= :\.\d+:: // Floor value to get an integer
	@ispASL0 /= 10
	
	@ispVac1 *= 1.1
	@ispVac1 *= 10
	@ispVac1 ^= :\.\d+:: // Floor value to get an integer
	@ispVac1 /= 10
	
	@ispASL1 *= 1.1
	@ispASL1 *= 10
	@ispASL1 ^= :\.\d+:: // Floor value to get an integer
	@ispASL1 /= 10
	
	thrustMult = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	@thrustMult /= #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	
	thrustVac0 = #$MODULE[ModuleEngines*],0/maxThrust$
	@thrustVac0 *= 10
	@thrustVac0 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac0 /= 10
	
	thrustASL0 = #$MODULE[ModuleEngines*],0/maxThrust$
	@thrustASL0 *= #$thrustMult$
	@thrustASL0 *= 10
	@thrustASL0 ^= :\.\d+:: // Floor value to get an integer
	@thrustASL0 /= 10
	
	
	thrustVac1 = #$upgradedThrust0$
	@thrustVac1 *= 10
	@thrustVac1 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac1 /= 10
	
	thrustASL1 = #$upgradedThrust0$
	@thrustASL1 *= #$thrustMult$
	@thrustASL1 *= 10
	@thrustASL1 ^= :\.\d+:: // Floor value to get an integer
	@thrustASL1 /= 10
	
	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = engineSwitch
		switcherDescriptionPlural = Engine Models
		switcherDescription = Engine Switch

		affectDragCubes = False
		affectFARVoxels = False
		
		SUBTYPE
	    {
			name = original
			title = #$../../title$
			descriptionSummary = Original Model.
			descriptionDetail = #<b>Thrust:</b> $../../thrustASL0$ kN ASL / $../../thrustVac0$ kN Vac.\n<b>Isp:</b> $../../ispASL0$ s ASL / $../../ispVac0$ s Vac.
			addedCost = 0
			defaultSubtypePriority = 1
			primaryColor = #3cff00
			secondaryColor = #bfa760
	    }
		
		SUBTYPE
	    {
			name = upgrade
			title = #$../../title$
			@title ^= #:$../../engineName$:$../../engineNameUpgrade$:
			@title ^= #:$../../engineNumber$:$../../engineNumberUpgrade$:
			descriptionSummary = 20% Increased Thrust, 10% Increased Specific Impulse.
			descriptionDetail = #<b>Thrust:</b> $../../thrustASL1$ kN ASL / $../../thrustVac1$ kN Vac.\n<b>Isp:</b> $../../ispASL1$ s ASL / $../../ispVac1$ s Vac.
			upgradeRequired = #$../../enginePartUpgradeName$
			addedCost = #$../../addCost$
			addedMass = #$../../addMass$
			defaultSubtypePriority = 0
			primaryColor = #218e00
			secondaryColor = #bfa760

			MODULE
			{
			    IDENTIFIER
			    {
					name = ModuleEngines*
			    }

			    DATA
			    {
					maxThrust = #$../../../../upgradedThrust0$
					atmosphereCurve
					{
						key = #$../../../../../key00$
						key = #$../../../../../key10$
						key = #$../../../../../key20$
					}
				}			    
			}
	    }
	}	
}

// Standard MonoPropellant Engine Upgrade
@PART[*]:HAS[#engineUpgradeType[standardMono]]:FOR[zzKiwiTechTree]
{	
	@description = #$description$ \n\n<color=#ff0000>This part has upgrades!</color> 
	
	upgradedThrust0 = #$MODULE[ModuleEngines*],0/maxThrust$
	@upgradedThrust0 *= 1.2
	
	%addCost = #$cost$
	@addCost *= 0.5
	
	%addMass = #$mass$
	@addMass *= 0.1
	
	// These are technically the same, but want to leave it open to alter in the future
	key00 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0$
	@key00[1, ] *= 1.1
	key10 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,1$
	@key10[1, ] *= 1.1
	key20 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,2$
	@key20[1, ] *= 1.1
	
	ispVac0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	ispVac1 = #$ispVac0$
	@ispVac0 *= 10
	@ispVac0 ^= :\.\d+:: // Floor value to get an integer
	@ispVac0 /= 10
	
	ispASL0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	ispASL1 = #$ispASL0$
	@ispASL0 *= 10
	@ispASL0 ^= :\.\d+:: // Floor value to get an integer
	@ispASL0 /= 10
	
	@ispVac1 *= 1.1
	@ispVac1 *= 10
	@ispVac1 ^= :\.\d+:: // Floor value to get an integer
	@ispVac1 /= 10
	
	@ispASL1 *= 1.1
	@ispASL1 *= 10
	@ispASL1 ^= :\.\d+:: // Floor value to get an integer
	@ispASL1 /= 10
	
	thrustMult = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	@thrustMult /= #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	
	thrustVac0 = #$MODULE[ModuleEngines*],0/maxThrust$
	@thrustVac0 *= 10
	@thrustVac0 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac0 /= 10
	
	thrustASL0 = #$MODULE[ModuleEngines*],0/maxThrust$
	@thrustASL0 *= #$thrustMult$
	@thrustASL0 *= 10
	@thrustASL0 ^= :\.\d+:: // Floor value to get an integer
	@thrustASL0 /= 10
	
	
	thrustVac1 = #$upgradedThrust0$
	@thrustVac1 *= 10
	@thrustVac1 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac1 /= 10
	
	thrustASL1 = #$upgradedThrust0$
	@thrustASL1 *= #$thrustMult$
	@thrustASL1 *= 10
	@thrustASL1 ^= :\.\d+:: // Floor value to get an integer
	@thrustASL1 /= 10
	
	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = engineSwitch
		switcherDescriptionPlural = Engine Models
		switcherDescription = Engine Switch

		affectDragCubes = False
		affectFARVoxels = False
		
		SUBTYPE
	    {
			name = original
			title = #$../../title$
			descriptionSummary = Original Model.
			descriptionDetail = #<b>Thrust:</b> $../../thrustASL0$ kN ASL / $../../thrustVac0$ kN Vac.\n<b>Isp:</b> $../../ispASL0$ s ASL / $../../ispVac0$ s Vac.
			addedCost = 0
			defaultSubtypePriority = 1
			primaryColor = #3cff00
			secondaryColor = #ffffcc
	    }
		
		SUBTYPE
	    {
			name = upgrade
			title = #$../../title$
			@title ^= #:$../../engineName$:$../../engineNameUpgrade$:
			@title ^= #:$../../engineNumber$:$../../engineNumberUpgrade$:
			descriptionSummary = 20% Increased Thrust, 10% Increased Specific Impulse.
			descriptionDetail = #<b>Thrust:</b> $../../thrustASL1$ kN ASL / $../../thrustVac1$ kN Vac.\n<b>Isp:</b> $../../ispASL1$ s ASL / $../../ispVac1$ s Vac.
			upgradeRequired = #$../../enginePartUpgradeName$
			addedCost = #$../../addCost$
			addedMass = #$../../addMass$
			defaultSubtypePriority = 0
			primaryColor = #218e00
			secondaryColor = #ffffcc

			MODULE
			{
			    IDENTIFIER
			    {
					name = ModuleEngines*
			    }

			    DATA
			    {
					maxThrust = #$../../../../upgradedThrust0$
					atmosphereCurve
					{
						key = #$../../../../../key00$
						key = #$../../../../../key10$
						key = #$../../../../../key20$
					}
				}			    
			}
	    }
	}	
}


// Standard LH2/CH4 Engine Upgrade
@PART[*]:HAS[#engineUpgradeType[standardLH2CH4]]:FOR[zzKiwiTechTree]
{	
	@description = #$description$ \n\n<color=#ff0000>This part has upgrades!</color> 
	
	upgradedThrust0 = #$MODULE[ModuleEngines*],0/maxThrust$
	@upgradedThrust0 *= 1.2
	
	%addCost = #$cost$
	@addCost *= 0.5
	
	%addMass = #$mass$
	@addMass *= 0.1
	
	// These are technically the same, but want to leave it open to alter in the future
	key00 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0$
	@key00[1, ] *= 1.1
	key10 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,1$
	@key10[1, ] *= 1.1
	key20 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,2$
	@key20[1, ] *= 1.1
	
	ispVac0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	ispVac1 = #$ispVac0$
	@ispVac0 *= 10
	@ispVac0 ^= :\.\d+:: // Floor value to get an integer
	@ispVac0 /= 10
	
	ispASL0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	ispASL1 = #$ispASL0$
	@ispASL0 *= 10
	@ispASL0 ^= :\.\d+:: // Floor value to get an integer
	@ispASL0 /= 10
	
	@ispVac1 *= 1.1
	@ispVac1 *= 10
	@ispVac1 ^= :\.\d+:: // Floor value to get an integer
	@ispVac1 /= 10
	
	@ispASL1 *= 1.1
	@ispASL1 *= 10
	@ispASL1 ^= :\.\d+:: // Floor value to get an integer
	@ispASL1 /= 10
	
	thrustMult = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	@thrustMult /= #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	
	thrustVac0 = #$MODULE[ModuleEngines*],0/maxThrust$
	@thrustVac0 *= 10
	@thrustVac0 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac0 /= 10
	
	thrustASL0 = #$MODULE[ModuleEngines*],0/maxThrust$
	@thrustASL0 *= #$thrustMult$
	@thrustASL0 *= 10
	@thrustASL0 ^= :\.\d+:: // Floor value to get an integer
	@thrustASL0 /= 10
	
	
	thrustVac1 = #$upgradedThrust0$
	@thrustVac1 *= 10
	@thrustVac1 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac1 /= 10
	
	thrustASL1 = #$upgradedThrust0$
	@thrustASL1 *= #$thrustMult$
	@thrustASL1 *= 10
	@thrustASL1 ^= :\.\d+:: // Floor value to get an integer
	@thrustASL1 /= 10
	
	
	
	
	// Methalox
	%key00_2 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0$
	@key00_2[1, ] *= 0.82
	%key10_2 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,1$
	@key10_2[1, ] *= 0.82
	%key20_2 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,2$
	@key20_2[1, ] *= 0.82
	
	// Methalox
	%key00_3 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0$
	@key00_3[1, ] *= 0.902
	%key10_3 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,1$
	@key10_3[1, ] *= 0.902
	%key20_3 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,2$
	@key20_3[1, ] *= 0.902
	
	ispVac0M = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	ispVac1M = #$ispVac0M$
	@ispVac0M *= 0.82
	@ispVac1M *= 0.902
	
	@ispVac0M *= 10
	@ispVac0M ^= :\.\d+:: // Floor value to get an integer
	@ispVac0M /= 10
	
	ispASL0M = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	ispASL1M = #$ispASL0$
	@ispASL0M *= 10
	@ispASL0M ^= :\.\d+:: // Floor value to get an integer
	@ispASL0M /= 10
	
	@ispVac1M *= 1.1
	@ispVac1M *= 10
	@ispVac1M ^= :\.\d+:: // Floor value to get an integer
	@ispVac1M /= 10
	
	@ispASL1M *= 1.1
	@ispASL1M *= 10
	@ispASL1M ^= :\.\d+:: // Floor value to get an integer
	@ispASL1M /= 10
	
	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = engineSwitch
		switcherDescriptionPlural = Engine Models
		switcherDescription = Engine Switch

		affectDragCubes = False
		affectFARVoxels = False
		
		SUBTYPE
	    {
			name = original
			title = #$../../title$
			descriptionSummary = Original Model (Hydrolox).
			descriptionDetail = #<b>Thrust:</b> $../../thrustASL0$ kN ASL / $../../thrustVac0$ kN Vac.\n<b>Isp:</b> $../../ispASL0$ s ASL / $../../ispVac0$ s Vac.
			addedCost = 0
			defaultSubtypePriority = 1
			primaryColor = #3cff00
			secondaryColor = #99ccff
	    }
		
		SUBTYPE
	    {
			name = upgrade
			title = #$../../title$
			@title ^= #:$../../engineName$:$../../engineNameUpgrade$:
			@title ^= #:$../../engineNumber$:$../../engineNumberUpgrade$:
			descriptionSummary = Upgraded Model (Hydrolox); 20% Increased Thrust, 10% Increased Specific Impulse.
			descriptionDetail = #<b>Thrust:</b> $../../thrustASL1$ kN ASL / $../../thrustVac1$ kN Vac.\n<b>Isp:</b> $../../ispASL1$ s ASL / $../../ispVac1$ s Vac.
			upgradeRequired = #$../../enginePartUpgradeName$
			addedCost = #$../../addCost$
			addedMass = #$../../addMass$
			defaultSubtypePriority = 0
			primaryColor = #218e00
			secondaryColor = #99ccff

			MODULE
			{
			    IDENTIFIER
			    {
					name = ModuleEngines*
			    }

			    DATA
			    {
					maxThrust = #$../../../../upgradedThrust0$
					atmosphereCurve
					{
						key = #$../../../../../key00$
						key = #$../../../../../key10$
						key = #$../../../../../key20$
					}
				}			    
			}
	    }
		
		SUBTYPE:NEEDS[CryoTanksMethalox]
	    {
			name = originalMethalox
			title = #$../../title$
			@title ^= #:$../../engineName$:$../../engineNameMethalox$:
			@title ^= #:$../../engineNumber$:$../../engineNumberMethalox$:
			descriptionSummary = Original Model (Methalox).
			descriptionDetail = #<b>Thrust:</b> $../../thrustASL0$ kN ASL / $../../thrustVac0$ kN Vac.\n<b>Isp:</b> $../../ispASL0M$ s ASL / $../../ispVac0M$ s Vac.
			addedCost = 0
			defaultSubtypePriority = 1
			primaryColor = #3cff00
			secondaryColor = #00bf8f
			
			MODULE
			{
			    IDENTIFIER
			    {
					name = ModuleEngines*
			    }

			    DATA
			    {
					PROPELLANT
					{
						name = LqdMethane
						ratio = 3
						DrawGauge = True
					}
					PROPELLANT
					{
						name = Oxidizer
						ratio = 1
					}
					atmosphereCurve
					{
						key = #$../../../../../key00_2$
						key = #$../../../../../key10_2$
						key = #$../../../../../key20_2$
					}
				}			    
			}
	    }
		
		SUBTYPE:NEEDS[CryoTanksMethalox]
	    {
			name = upgradeMethalox
			title = #$../../title$
			@title ^= #:$../../engineName$:$../../engineNameMethaloxUpgrade$:
			@title ^= #:$../../engineNumber$:$../../engineNumberMethaloxUpgrade$:
			descriptionSummary = Upgraded Model (Methalox); 20% Increased Thrust, 10% Increased Specific Impulse.
			descriptionDetail = #<b>Thrust:</b> $../../thrustASL1$ kN ASL / $../../thrustVac1$ kN Vac.\n<b>Isp:</b> $../../ispASL1M$ s ASL / $../../ispVac1M$ s Vac.
			upgradeRequired = #$../../enginePartUpgradeName$
			addedCost = #$../../addCost$
			addedMass = #$../../addMass$
			defaultSubtypePriority = 0
			primaryColor = #218e00
			secondaryColor = #00bf8f

			MODULE
			{
			    IDENTIFIER
			    {
					name = ModuleEngines*
			    }

			    DATA
			    {
					maxThrust = #$../../../../upgradedThrust0$
					PROPELLANT
					{
						name = LqdMethane
						ratio = 3
						DrawGauge = True
					}
					PROPELLANT
					{
						name = Oxidizer
						ratio = 1
					}
					atmosphereCurve
					{
						key = #$../../../../../key00_3$
						key = #$../../../../../key10_3$
						key = #$../../../../../key20_3$
					}
				}			    
			}
	    }
	}	
}
