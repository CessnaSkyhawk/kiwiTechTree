
// Standard LFO Engine Upgrade
@PART[*]:HAS[#engineUpgradeType[standardLFO]]:FOR[zzKiwiTechTree]
{	
	@description = #$description$ \n\n<color=#ff0000>This part has upgrades!</color> 
	
	upgradedThrust0 = #$MODULE[ModuleEnginesFX],0/maxThrust$
	@upgradedThrust0 *= 1.2
	
	%addCost = #$cost$
	@addCost *= 0.5
	
	%addMass = #$mass$
	@addMass *= 0.1
	
	// These are technically the same, but want to leave it open to alter in the future
	key00 = #$MODULE[ModuleEnginesFX],0/atmosphereCurve/key,0$
	@key00[1, ] *= 1.1
	key10 = #$MODULE[ModuleEnginesFX],0/atmosphereCurve/key,1$
	@key10[1, ] *= 1.1
	key20 = #$MODULE[ModuleEnginesFX],0/atmosphereCurve/key,2$
	@key20[1, ] *= 1.1
	
	ispVac0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	ispVac1 = #$ispVac0$
	@ispVac0 *= 10
	@ispVac0 ^= :\.\d+:: // Floor value to get an integer
	@ispVac0 /= 10
	
	ispASL0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	ispASL1 = #$ispASL0$
	@ispASL0 *= 10
	@ispASL0 ^= :\.\d+:: // Floor value to get an integer
	@ispASL0 /= 10
	
	@ispVac1 *= 1.1
	@ispVac1 *= 10
	@ispVac1 ^= :\.\d+:: // Floor value to get an integer
	@ispVac1 /= 10
	
	@ispASL1 *= 1.1
	@ispASL1 *= 10
	@ispASL1 ^= :\.\d+:: // Floor value to get an integer
	@ispASL1 /= 10
	
	thrustMult = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	@thrustMult /= #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	
	thrustVac0 = #$MODULE[ModuleEnginesFX],0/maxThrust$
	@thrustVac0 *= 10
	@thrustVac0 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac0 /= 10
	
	thrustASL0 = #$MODULE[ModuleEnginesFX],0/maxThrust$
	@thrustASL0 *= #$thrustMult$
	@thrustASL0 *= 10
	@thrustASL0 ^= :\.\d+:: // Floor value to get an integer
	@thrustASL0 /= 10
	
	
	thrustVac1 = #$upgradedThrust0$
	@thrustVac1 *= 10
	@thrustVac1 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac1 /= 10
	
	thrustASL1 = #$upgradedThrust0$
	@thrustASL1 *= #$thrustMult$
	@thrustASL1 *= 10
	@thrustASL1 ^= :\.\d+:: // Floor value to get an integer
	@thrustASL1 /= 10
	
	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = engineSwitch
		switcherDescriptionPlural = Engine Models
		switcherDescription = Engine Switch

		affectDragCubes = False
		affectFARVoxels = False
		
		SUBTYPE
	    {
			name = original
			title = #$../../title$
			descriptionSummary = Original Model.
			descriptionDetail = #<b>Thrust:</b> $../../thrustASL0$ kN ASL / $../../thrustVac0$ kN Vac.\n<b>Isp:</b> $../../ispASL0$ s ASL / $../../ispVac0$ s Vac.
			addedCost = 0
			defaultSubtypePriority = 1
			primaryColor = #3cff00
			secondaryColor = #bfa760
	    }
		
		SUBTYPE
	    {
			name = upgrade
			title = #$../../title$
			@title ^= #:$../../engineName$:$../../engineNameUpgrade$:
			@title ^= #:$../../engineNumber$:$../../engineNumberUpgrade$:
			descriptionSummary = 20% Increased Thrust, 10% Increased Specific Impulse.
			descriptionDetail = #<b>Thrust:</b> $../../thrustASL1$ kN ASL / $../../thrustVac1$ kN Vac.\n<b>Isp:</b> $../../ispASL1$ s ASL / $../../ispVac1$ s Vac.
			upgradeRequired = #$../../engineUpgradeName$
			addedCost = #$../../addCost$
			addedMass = #$../../addMass$
			defaultSubtypePriority = 0
			primaryColor = #218e00
			secondaryColor = #bfa760

			MODULE
			{
			    IDENTIFIER
			    {
					name = ModuleEnginesFX
			    }

			    DATA
			    {
					maxThrust = #$../../../../upgradedThrust0$
					atmosphereCurve
					{
						key = #$../../../../../key00$
						key = #$../../../../../key10$
						key = #$../../../../../key20$
					}
				}			    
			}
	    }
	}	
}